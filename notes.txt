Django tutorial video series

Part 1: install django and test
https://www.youtube.com/watch?v=FNQxxpM1yOs&t=627s

Create the project
$ mkdir django-tutorial; cd django-tutorial
$ django-admin startproject mysite

The project is created in the current dir
./mysite/mysite contains the settings and main files

Running for the first time
$ cd mysite
$ python3 manage.py run
  (ok to ignore the unapplied migrations for now)

Browse to the URL http://localhost:8000 to check if django website is up

========

Part 2: create the first app (under mysite)
https://www.youtube.com/watch?v=iZ5my3krEVM

Start at the top level to create the new app, webapp
$ cd mysite
$ python3 manage.py startapp webapp

Add 'webapp' to ./mysite/settings.py INSTALLED_APPS

        INSTALLED_APPS = [
            'webapp',
            'django.contrib.admin',
            'django.contrib.auth',
            'django.contrib.contenttypes',
            'django.contrib.sessions',
            'django.contrib.messages',
            'django.contrib.staticfiles',
        ]

Add webapp to ./mysite/urls.py and add import include

        from django.conf.urls import url, include
        from django.contrib import admin

        urlpatterns = [
            url(r'^admin/', admin.site.urls),
            url(r'^webapp/', include('webapp.urls')),
        ]

Add index function to ./mysite/webapp/views.py

        from django.shortcuts import render
        from django.http import HttpResponse

        def index(request):
            return HttpResponse("<h2>HEY!</h2>"

Create new file ./mysite/webapp/urls.py, add new pattern

        from django.conf.urls import url
        from . import views

        urlpatterns = [
            url(r'^$', views.index, name='index')]


Browse to the URL http://localhost:8000/webapp to check that app works,
NOTE: browsing to http://localhost:8000/ for now gives error 404

Each app is modeled as MVC model-view-controller
./mysite/urls.py has the "list of apps"
./mysite/webapp/urls.py controls what is served based on url patterns
   (regular expressions)
./mysite/webapp/models.py has data models, i.e. database structures and metadata
./mysite/webapp/views.py handles UI, i.e. what the end-user views/interacts

============

Part 3: HTML templating with Jinja
https://www.youtube.com/watch?v=3tf8XlhsQAo

Start at the top level to create the new app, personal
$ cd mysite
$ python3 manage.py startapp personal

Install the app (add entry 'personal' to settings.py INSTALLED_APPS)


